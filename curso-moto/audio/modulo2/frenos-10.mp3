<script>
    window.dataLayer = window.dataLayer || [];

    dataLayer.push({
        'encryptURL': 'false',
        'disableCookie': 'false',
        'removeScripts': 'false',
        'proxyURL': 'ttsmp3.com'
    });

    (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-W4S4Q6S');
</script>
<script src="https://www.hidemyass-freeproxy.com/xhook.min.js" proxy="ignore"></script>
<script type="text/javascript">
xhook.before(function(request) {
    if (
        -1 == request.url.indexOf("/proxy/es-es/") &&
        -1 == request.url.indexOf(".optmstr.com") &&
        -1 == request.url.indexOf(".opmnstr.com") &&
        -1 == request.url.indexOf(".optmnstr.com") &&
        -1 == request.url.indexOf(".omappapi.com")
        /**/
    ) {
        var origUrl = request.url;

        if (request.url.startsWith("https://www.hidemyass-freeproxy.com/")) {
            request.url = request.url.replace("https://www.hidemyass-freeproxy.com/", "https://ttsmp3.com/");
        } else if (request.url.startsWith("http://") || request.url.startsWith("https://")) {
            // do nothing with the url
        } else if (request.url.startsWith("//")) {
            request.url = "https:" + request.url;
        } else if (request.url.startsWith("/")) {
            request.url = "https://ttsmp3.com" + request.url;
        } else if (request.url.startsWith(".")) {
            request.url = "https://ttsmp3.com" + request.url.replace("./", "/");
        } else {
            request.url = "https://ttsmp3.com/" + request.url;
        }

        var sanitizedUrl = request.url;

        request.url = "/proxy/es-es/" + (window.btoa(request.url).replace(/\+/g, '-').replace(/\//g, '_').replace(/=/g, ''));

        console.log("Proxy: XHR request '" + origUrl + "' was sanitized '" + sanitizedUrl + "' and proxied '" + request.url + "'")
    } else {
        console.log("Proxy: XHR no action needed: '" + request.url + "'");
    }
});
</script>
<script type="text/javascript">
// Run only once in case this code is injected into page through multiple frames or ajaxes
if (typeof observeDOM === 'undefined') {
    var proxyUrl = (function(origUrl) {
        if (typeof origUrl == 'undefined' || !origUrl) {
            return origUrl;
        }

        var newUrl = origUrl;
        if (
            -1 == newUrl.indexOf("/proxy/es-es/") &&
            -1 == newUrl.indexOf("www.hidemyass.com") &&
            -1 == newUrl.indexOf(".optmstr.com") &&
            -1 == newUrl.indexOf(".optmnstr.com") &&
            -1 == newUrl.indexOf(".opmnstr.com")  &&
            -1 == newUrl.indexOf(".omappapi.com") &&
            -1 == newUrl.indexOf("javascript:") &&
            -1 == newUrl.indexOf("data:")
            /**/
        ) {
            newUrl = newUrl.replace("https://www.hidemyass-freeproxy.com/", "/");

            if (newUrl.startsWith("http://") || newUrl.startsWith("https://")) {
                // do nothing with the url
            } else if (newUrl.startsWith("//")) {
                newUrl = "https:" + newUrl;
            } else if (newUrl.startsWith("/")) {
                newUrl = "https://ttsmp3.com" + newUrl;
            } else if (newUrl.startsWith(".")) {
                newUrl = "https://ttsmp3.com" + newUrl.replace("./", "/");
            } else {
                newUrl = "https://ttsmp3.com/" + newUrl;
            }
            var sanitizedUrl = newUrl;

            newUrl = "/proxy/es-es/" + (window.btoa(newUrl).replace(/\+/g, '-').replace(/\//g, '_').replace(/=/g, ''));
            console.log("Proxy: OnDOMChange unproxied url detected '" + origUrl + "' was sanitized '" + sanitizedUrl + "' and proxied '" + newUrl + "'");
        }

        return newUrl;
    });

    // object.watch
    if (!Object.prototype.watch) {
        Object.defineProperty(Object.prototype, "watch", {
            enumerable: false
            , configurable: true
            , writable: false
            , value: function (prop, handler) {
                var
                oldval = this[prop]
                , newval = oldval
                , getter = function () {
                    return newval;
                }
                , setter = function (val) {
                    oldval = newval;
                    return newval = handler.call(this, prop, oldval, val);
                }
                ;

                if (delete this[prop]) { // can't watch constants
                    Object.defineProperty(this, prop, {
                        get: getter
                        , set: setter
                        , enumerable: true
                        , configurable: true
                    });
                }
            }
        });
    }
    // object.unwatch
    if (!Object.prototype.unwatch) {
        Object.defineProperty(Object.prototype, "unwatch", {
            enumerable: false
            , configurable: true
            , writable: false
            , value: function (prop) {
                var val = this[prop];
                delete this[prop]; // remove accessors
                this[prop] = val;
            }
        });
    }
    var proxyWindowLocation =  { href: "" }
    proxyWindowLocation.watch("href", function(propertyName, oldValue, newValue) {
        window.location.href = proxyUrl(newValue);
    });
    var proxyCustomReplace = function (loc) {
        window.location.replace(proxyUrl(loc));
    }

    var observeDOM = (function(){
        var MutationObserver = window.MutationObserver || window.WebKitMutationObserver,
            eventListenerSupported = window.addEventListener;

        return function(obj, callback){
            if( MutationObserver ){
                // define a new observer
                var obs = new MutationObserver(function(mutations, observer){
                    if( mutations[0].addedNodes.length || mutations[0].removedNodes.length )
                        callback();
                });
                // have the observer observe foo for changes in children
                obs.observe( obj, { childList:true, subtree:true });
            }
            else if( eventListenerSupported ){
                obj.addEventListener('DOMNodeInserted', callback, false);
                obj.addEventListener('DOMNodeRemoved', callback, false);
            }
        };
    })();

    // Observe a specific DOM element:
    observeDOM( document.getElementsByTagName("html")[0] ,function(){
        window.removeEventListener("error", window.onerror);
        var frames = document.getElementsByTagName("iframe");
        for (var i = 0; i < frames.length; i++) {
            if (frames[i].getAttribute("src") && "about:blank" == frames[i].getAttribute("src")) {
                continue;
            }
            frames[i].parentNode.removeChild(frames[i]);
        }
        var images = document.getElementsByTagName("img");
        for (var i = 0; i < images.length; i++) {
            if (images[i].hasAttribute("data-src")) {
                images[i].src = images[i].getAttribute("data-src");
            }
            images[i].src = proxyUrl(images[i].src);
            images[i].removeAttribute("srcset");
        }
        var links = document.getElementsByTagName("a");
        for (var i = 0; i < links.length; i++) {
            links[i].href = proxyUrl(links[i].href);
            links[i].onmousedown = function() {
                this.href = proxyUrl(this.href);
            }
        }
        var scripts = document.getElementsByTagName("script");
        for (var i = 0; i < scripts.length; i++) {
            if (typeof scripts[i].src != 'undefined' && scripts[i].src) {
                if (scripts[i].getAttribute("proxy") && "ignore" == scripts[i].getAttribute("proxy")) {
                    scripts[i].ishandled = true;
                }
                if (typeof scripts[i].ishandled == 'undefined' || null == scripts[i].ishandled) {
                    var proxiedUrl = proxyUrl(scripts[i].src);

                    if (proxiedUrl == scripts[i].src) {
                        console.log("Script: is proxied with correct url '" + scripts[i].src + "'");
                        scripts[i].ishandled = true;
                    } else {
                        console.log("Script: replacing script with new element '" + scripts[i].src + "'");
                        var newScript = document.createElement("script");
                        newScript.src = proxiedUrl;
                        newScript.setAttribute('orig-src', scripts[i].src);
                        newScript.setAttribute("type", "text/javascript");
                        newScript.ishandled = true;
                        scripts[i].parentNode.replaceChild(newScript, scripts[i]);
                    }
                }
            }
        }
        var styles = document.getElementsByTagName("link");
        for (var i = 0; i < styles.length; i++) {
            if (styles[i].getAttribute("proxy") && "ignore" == styles[i].getAttribute("proxy")) {
                continue;
            }
            if (styles[i].getAttribute("rel") && "stylesheet" != styles[i].getAttribute("rel")) {
                continue;
            }
            styles[i].src = proxyUrl(styles[i].src);
        }
    });
}
</script>
<script>
  (function () {
    function isMobile() {
      return /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)
      || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0,4));
    }

    function displaySmartBanner() {
      !function(e,n,t){!function(e,n,t,r,a){
      var s=(e[n]=e[n]||{})[t]=function(){(s._q=s._q||[]).push(Array.prototype.slice.call(arguments))};
      s.webkey=a;
      for(var i=0;i<r.length;i++)
      s[r[i]]=function(n)
      {return function()
      {var e=Array.prototype.slice.call(arguments);
      return e.unshift(n),(s._q=s._q||[]).push(e),s}}
      (r[i])}(e,"AF","Banner",["showBanner","hideBanner","disableBanners","disableTracking","setAdditionalParams"],t),
      function(e,n,t){var r=e.createElement("script");
      r.type="text/javascript",r.async=!0,r.src=n+(t?"?webkey="+t:"");
      var a=e.getElementsByTagName("script")[0];
      a.parentNode.insertBefore(r,a)}(n,"https://cdn.appsflyer.com/web-sdk/banner/latest/sdk.min.js",t)}(window,document,"613e25ce-a4fb-4b4e-a341-d24920385ce9");
      window.AF.Banner.showBanner();
    }

    if (isMobile()) {
      displaySmartBanner();
    }
  }());
</script>

<link rel="stylesheet" proxy="ignore" type="text/css" href="https://www.hidemyass-freeproxy.com/styles/url_form.css?2">

<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-W4S4Q6S" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>

	
<div id="hma-top" class="es-es" dir="ltr">
	<span id="hma-top-hide">Ocultar</span>
	<span id="hma-top-show">Mostrar</span>

	<form name="form" method="post" action="https://www.hidemyass-freeproxy.com/process/es-es" target="_top" novalidate="novalidate" class="hma-top-inner">
		<div class="hma-top-logo-outer">
	        <a href="https://www.hidemyass.com/es-es/proxy" class="hma-top-logo">Proxy web</a>
		</div>

		<div class="hma-top-close">
			<div class="hma-top-close-icon"></div>
		</div>

		<div id="hma-top-settings">
			<div id="hma-top-settings-icon"></div>
			<div id="hma-top-settings-list">
				<div class="hma-top-settings-list-close"></div>
				<div class="hma-top-settings-list-title">Opciones</div>
				<label class="hma-top-settings-list-checkbox">
					<input type="checkbox" id="form_isPrivate" name="form[isPrivate]" value="1" />
					<span></span>
					<div class="hma-top-settings-list-checkbox-name">Cifrar URL</div>
					<div class="hma-top-settings-list-checkbox-description">Al cifrar la URL, solo se oculta la dirección. ¿Quieres cifrar toda tu conexión? Necesitarás una VPN.</div>
				</label>
				<label class="hma-top-settings-list-checkbox">
					<input type="checkbox" id="form_isCookieDisabled" name="form[isCookieDisabled]" value="1" />
					<span></span>
					<div class="hma-top-settings-list-checkbox-name">Desactivar cookies</div>
					<div class="hma-top-settings-list-checkbox-description">Las cookies son pequeños archivos que se almacenan en el equipo y permiten que los servidores te reconozcan</div>
				</label>
				<label class="hma-top-settings-list-checkbox">
					<input type="checkbox" id="form_isJavascriptDisabled" name="form[isJavascriptDisabled]" value="1" />
					<span></span>
					<div class="hma-top-settings-list-checkbox-name">Eliminar scripts</div>
					<div class="hma-top-settings-list-checkbox-description">Al eliminar los scripts, se bloquearán los de la página. Es posible que, así, la página en cuestión se cargue más deprisa y sin anuncios, pero algunas partes pueden dejar de funcionar.</div>
				</label>
				<span id="hma-top-settings-list-reload">Aplicar</span>
			</div>
		</div>

		<div id="hma-top-select">
			<input type="hidden" id="form_dataCenter" name="form[dataCenter]" value="random" />
			<div id="hma-top-select-icon"></div>
			<div id="hma-top-select-list">
				<div class="hma-top-select-list-close"></div>
				<div class="hma-top-select-list-title">Conectar a través del servidor</div>
									<div class="hma-top-select-list-item" data-url="https://proxy-nyc.hidemyass-freeproxy.com" data-value="us">EE. UU. (Nueva York)</div>
									<div class="hma-top-select-list-item" data-url="https://proxy-sea.hidemyass-freeproxy.com" data-value="us2">EE. UU. (Seattle)</div>
									<div class="hma-top-select-list-item" data-url="https://proxy-fra.hidemyass-freeproxy.com" data-value="de">Alemania (Fráncfort)</div>
									<div class="hma-top-select-list-item" data-url="https://proxy-ams.hidemyass-freeproxy.com" data-value="nl">Países Bajos (Ámsterdam)</div>
									<div class="hma-top-select-list-item" data-url="https://proxy-lon.hidemyass-freeproxy.com" data-value="uk">Reino Unido (Londres)</div>
									<div class="hma-top-select-list-item" data-url="https://proxy-prg.hidemyass-freeproxy.com" data-value="cz">República Checa (Praga)</div>
							</div>
			<div class="hma-top-select-bubble" id="hma-top-server-changed-bubble" style="display: none">
				<p>Se te ha redirigido a un servidor en otra ubicación porque la que has elegido no está disponible temporalmente.</p>
				<span class="hma-top-select-bubble-button">Aceptar</span>
			</div>
		</div>

		<div class="hma-top-input">
		    <input type="text" id="hma-top-input-url" name="form[url]" required="required" placeholder="" autocomplete="off" value="https://ttsmp3.com/dlmp3.php?mp3=undefined&amp;location=direct" />
			<input id="hma-top-input-submit" type="submit">
			<div class="hma-error-bubble">
				<a class="hma-error-bubble-close-bubble" href="#" data-role="bubble-close" data-element-name="unsupported-bubble"></a>
				<p class="hma-error-bubble-header">Lo sentimos Es posible que un proxy no funcione aquí,</p>
				<p>pero una VPN te puede ayudar a acceder al contenido que estás buscando.</p>
				<p><a id="hma-error-education-bubble" href="https://www.hidemyass.com/es-es/proxy-vpn" data-role="internal-promo" data-element-name="unsupported-bubble">¿Cuál es la diferencia entre un proxy y una VPN?</a></p>
				<a id="hma-error-continue-bubble" class="hma-error-bubble-button" onclick="document.getElementById('hma-top-input-submit').click()" href="#" data-role="bubble-cta" data-element-name="unsupported-bubble">Ir a la página (<span class="hma-error-bubble-countdown">10</span>)</a>
			</div>
		</div>

		<div class="hma-top-button-outer">
			<a href="https://www.hidemyass.com/es-es/proxy-vpn" data-role="cta-button" class="hma-top-button">Prueba de la VPN gratuita</a>
	  	</div>
    </form>
</div>

<script>
    var Cookies = {
        set: function (name, value, secondsExpires) {
            var nameEscaped = encodeURIComponent(name);
            var valueEscaped = encodeURIComponent(value || '');
            var domain = window.location.hostname.split('.').slice(-2).join('.');

            var cookieString = nameEscaped + '=' + valueEscaped;

            if (secondsExpires !== undefined) {
                var expires = (new Date(new Date().setTime(new Date().getTime() + (secondsExpires * 1000)))).toUTCString();
                cookieString += '; expires=' + expires;
            }

            cookieString += '; path=/; domain=.' + domain;

            document.cookie = cookieString;
        },
        getAll: function () {
            var cookies = {};

            document.cookie.split(/;\s+/).forEach(function (cookie) {
                var splitted = cookie.split('=');
                var name = decodeURIComponent(splitted[0]);
                var value = decodeURIComponent(splitted[1]);

                cookies[name] = value;
            });

            return cookies;
        },
        get: function (searchName) {
            var cookies = this.getAll();
            return cookies[searchName];
        }
    };
</script>

<script>
    function ErrorBubble(submitButtonElem, errorBubbleElem, errorBubbleCountdownElem, closeBubbleElem, continueButtonElem, educationLinkElem) {
        this.siteCookiePrefix = 'site-';
        this.blackListSites = [
            'instagram.com',
            'paypal.com',
            'gmail.com',
            'mail.google.com',
            'unilever.taleo.net',
            'omegle.com',
            'violentclip.com',
            'flirt4free.com',
            'chaturbate.com',
            'cec18.us',
            'thepiratebay.org',
            'torrentdownloads.me',
            'thepiratebay3.org',
            'ilcorsaronero.unblockall.org',
            'netflix.com',
            'cnn.com',
            'www.google.com/sorry/index'
        ];
        this.errorCaptured = false;
        this.alreadyCaptured = [];
        this.submitButtonElem = submitButtonElem;
        this.errorBubbleElem = errorBubbleElem,
        this.errorBubbleCountdownElem = errorBubbleCountdownElem,
        this.closeBubbleElem = closeBubbleElem;
        this.continueButtonElem = continueButtonElem;
        this.educationLinkElem = educationLinkElem;
        this.countdownInterval;
        this._defineEvents();
    }
    ErrorBubble.prototype = {

        _defineEvents:function() {
            var that = this;
            this.closeBubbleElem.addEventListener('click', function (e) {
                e.preventDefault();
                that.errorCaptured = false;
                that._sendTracking();
                that._countDownRedirect(false);
                that.errorBubbleElem.style.display = 'none';
            }, false);
            this.continueButtonElem.addEventListener('click', function (e) {
                that._sendTracking();
            }, false);
            this.educationLinkElem.addEventListener('click', function (e) {
                that.errorCaptured = false;
                that._sendTracking();
                that._countDownRedirect(false);
                that.errorBubbleElem.style.display = 'none';
            }, false);
        },

        _sendTracking:function() {
            var url = "";
            if (document.getElementById("hma-top-input-url")) {
                url = document.getElementById("hma-top-input-url").value;
            }
            if (!url && document.getElementById("form_url")) {
                url = document.getElementById("form_url").value;
            }
            dataLayer.push({
                'event': 'unsupportedBubbleView',
                'blackListedSite': url
            });
        },

        _countDownRedirect:function(status) {
            var that = this;
            if(status) {
                var errorCounter = 10;
                that.errorBubbleCountdownElem.innerHTML = errorCounter;
                this.countdownInterval = setInterval( function() {
                if(errorCounter > 0) {
                    that.errorBubbleCountdownElem.innerHTML = errorCounter;
                    errorCounter--;
                }
                else {
                    this.errorCaptured = true;
                    that.submitButtonElem.click();
                    clearInterval(this.countdownInterval);
                }
                }, 1000 );
            }
            else {
                clearInterval(this.countdownInterval);
            }
        },

        _checkDomainsBlacklist:function(url) {
            var hostname, subdomain, domain, splitArr, arrLen;

            if (url.indexOf("//") > -1) hostname = url.split('/')[2];
            else  hostname = url.split('/')[0];

            domain = hostname.split(':')[0].split('?')[0],
            splitArr = domain.split('.'),
            arrLen = splitArr.length;

            if (arrLen > 2) {
                subdomain = domain;
                domain = splitArr[arrLen - 2] + '.' + splitArr[arrLen - 1];
                if (splitArr[arrLen - 2].length == 2 && splitArr[arrLen - 1].length == 2) {
                    domain = splitArr[arrLen - 3] + '.' + domain;
                }
            }

            var prefixLength = this.siteCookiePrefix.length;
            var cookies = Cookies.getAll();
            for (var name in cookies) {
                if (name.indexOf(this.siteCookiePrefix) === 0) {
                    var site = name.substr(prefixLength);
                    this.alreadyCaptured.push(site);
                }
            }

            if(this.alreadyCaptured.indexOf(subdomain) !== -1 || this.alreadyCaptured.indexOf(domain) !== -1) { return false; }
            if(this.blackListSites.indexOf(domain) !== -1)      { this._saveDomain(domain); return true; }
            if(this.blackListSites.indexOf(subdomain) !== -1)   { this._saveDomain(subdomain); return true; }

            return false;
        },

        _saveDomain: function (domain) {
            var name = this.siteCookiePrefix + domain;
            var expires = 3 * 24 * 60 * 60;
            Cookies.set(name, undefined, expires);
        },

        showBubble:function(url, event) {
            url = url.toLowerCase();
            if(this.errorCaptured) {
                this._countDownRedirect(false);
            }
            if(this._checkDomainsBlacklist(url) && !this.errorCaptured) {
                event.preventDefault();
                this.errorCaptured = true;
                this.errorBubbleElem.style.display = 'block';
                this._countDownRedirect(true);
            }
        }
    };
</script>


<script>
//Hide show Controls
document.getElementById('hma-top-hide').addEventListener('click', function (e) {
    document.getElementById('hma-top').classList.add('-hidden');
    localStorage.hmaTopHidden = 'true';
}, false);
document.getElementById('hma-top-show').addEventListener('click', function (e) {
    document.getElementById('hma-top').classList.remove('-hidden');
    localStorage.hmaTopHidden = 'false';
}, false);
//Restore show/hidden state from storage
if (localStorage.hmaTopHidden === 'true') {
    document.getElementById('hma-top').classList.add('-hidden');
}

//Handler for showing input settings layer
document.getElementById('hma-top-settings-icon').addEventListener('click', function () {
    document.getElementById('hma-top-settings').classList.add('-opened');
}, false);

//Handler for settings option click
Array.prototype.map.call(document.querySelectorAll('.hma-top-settings-list-checkbox'), function (listItemElement) {
    listItemElement.addEventListener('click', function (e) {
        document.getElementById('hma-top-settings').classList.add('-opened');
    }, true);
});

//Handler for reload button
document.getElementById('hma-top-settings-list-reload').addEventListener('click', function () {
    document.getElementById('hma-top-input-submit').click();
}, false);

//highlight url input element on focus
document.getElementById('hma-top-input-url').addEventListener('focus', function () {
    document.getElementById('hma-top').classList.add('-hover');
}, false);
document.getElementById('hma-top-input-url').addEventListener('blur', function () {
    document.getElementById('hma-top').classList.remove('-hover');
}, false);

//Server selection handler
Array.prototype.map.call(document.querySelectorAll('.hma-top-select-list-item'), function (listItemElement) {
    listItemElement.addEventListener('click', function (e) {
		document.getElementById('hma-top-select').classList.remove('-opened');
        e.stopPropagation();

        var url = new URL(window.location.href);
        window.location.href = url.href.replace(url.origin, this.getAttribute("data-url"));
    }, false);
});
document.getElementById('hma-top-select-icon').addEventListener('click', function () {
    document.getElementById('hma-top-select').classList.add('-opened');
}, false);

//when click in the body close popups
document.body.addEventListener('click', function (e) {
	if (e.target.id === 'hma-top-settings-list'
	  || e.target.id === 'hma-top-select-list'
	  || e.target.classList.contains('hma-top-settings-list-title')
	  || e.target.classList.contains('hma-top-select-list-title')
	) {
		return;
	}

    document.getElementById('hma-top-settings').classList.remove('-opened');
    document.getElementById('hma-top-select').classList.remove('-opened');

    if (e.target.className === 'hma-popup-close') {
        //Set popup snooze
        var date = new Date();
        date.setMinutes(date.getMinutes() + 20);
        localStorage.hmaBubbleHiddenTo = date.getTime();

        //Remove popup
        Array.prototype.map.call(document.querySelectorAll('.hma-popup'), function (popupElem) {
            popupElem.parentElement.removeChild(popupElem);
        });
    } else if (e.target.className === 'hma-top-select-bubble-button') {
        e.target.parentElement.parentElement.removeChild(e.target.parentElement);
    }
}, true);

//If popup snooze is still active remove popup
if ((new Date()).getTime() < Number(localStorage.hmaBubbleHiddenTo || 0)) {
    Array.prototype.map.call(document.querySelectorAll('.hma-popup'), function (popupElem) {
        popupElem.parentElement.removeChild(popupElem);
    });
}

//Show popup with slight delay
setTimeout(function () {
	document.getElementById('hma-top').classList.add('-with-transition');

	//show popup if present in the html
	if (!window.Windows) {
		Array.prototype.map.call(document.querySelectorAll('.hma-popup'), function (popupElem) {
			popupElem.classList.add('-showed')
		});
	}
}, 300);

var hmaTopInner = document.getElementsByClassName('hma-top-inner')[0];
hmaTopInner.addEventListener('submit', function (event) {
	dataLayer.push({
		'event': 'formCompleted'
	});
	errorBubble.showBubble(document.getElementById('hma-top-input-url').value, event);
}, false);

// ErrorBubble
var errorBubble = new ErrorBubble(
	document.getElementById('hma-top-input-submit'),
	document.querySelector('.hma-error-bubble'),
	document.querySelector('.hma-error-bubble-countdown'),
	document.querySelector('.hma-error-bubble-close-bubble'),
	document.getElementById('hma-error-continue-bubble'),
    document.getElementById('hma-error-education-bubble')
);

if (window.Windows) {
    Array.prototype.map.call(document.querySelectorAll('.hma-top-logo'), function (logo) {
		var newLogoElement = document.createElement('span');
		newLogoElement.className = logo.className;
		newLogoElement.innerHTML = logo.innerHTML;
		newLogoElement.style.cursor = 'default';
		logo.parentElement.appendChild(newLogoElement);
		logo.parentElement.removeChild(logo);
    });

    Array.prototype.map.call(document.querySelectorAll('.hma-top-button'), function (button) {
        button.parentElement.removeChild(button);
    });

    Array.prototype.map.call(document.querySelectorAll('.hma-popup-button'), function (button) {
        button.href = 'https://www.hidemyass.com/lp-ws-hma?trial=7';
    });

	// show Windows review after 5 seconds
	var reviewShown = Cookies.get('reviewShown');
	if (reviewShown === undefined) {
		setTimeout(function () {
			Cookies.set('reviewShown', '', 5 * 365 * 24 * 60 * 60);

			var url = 'ms-windows-store://review/?ProductId=9N4JQ091TZ3T';
			var uri = new Windows.Foundation.Uri(url);
			Windows.System.Launcher.launchUriAsync(uri);
		}, 5000);
	}
}

// images preload
(new Image()).src = '/images/icon-close-white.svg';
(new Image()).src = '/images/icon-close.svg';

</script>
Denied.